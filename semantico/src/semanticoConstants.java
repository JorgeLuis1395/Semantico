/* Generated By:JavaCC: Do not edit this line. semanticoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface semanticoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IGUAL = 1;
  /** RegularExpression Id. */
  int MAS = 2;
  /** RegularExpression Id. */
  int MENOS = 3;
  /** RegularExpression Id. */
  int POR = 4;
  /** RegularExpression Id. */
  int DIVIDE = 5;
  /** RegularExpression Id. */
  int PUBLIC = 6;
  /** RegularExpression Id. */
  int PRIVATE = 7;
  /** RegularExpression Id. */
  int STATIC = 8;
  /** RegularExpression Id. */
  int VOID = 9;
  /** RegularExpression Id. */
  int MAIN = 10;
  /** RegularExpression Id. */
  int PROGRAMA = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int THEN = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int DO = 15;
  /** RegularExpression Id. */
  int WHILE = 16;
  /** RegularExpression Id. */
  int OUT = 17;
  /** RegularExpression Id. */
  int READ = 18;
  /** RegularExpression Id. */
  int RETURN = 19;
  /** RegularExpression Id. */
  int PARIZQ = 20;
  /** RegularExpression Id. */
  int PARDER = 21;
  /** RegularExpression Id. */
  int LLAVEIZQ = 22;
  /** RegularExpression Id. */
  int LLAVEDER = 23;
  /** RegularExpression Id. */
  int CORIZQ = 24;
  /** RegularExpression Id. */
  int CORDER = 25;
  /** RegularExpression Id. */
  int PUNTOYCOMA = 26;
  /** RegularExpression Id. */
  int COMA = 27;
  /** RegularExpression Id. */
  int COMILLAS = 28;
  /** RegularExpression Id. */
  int EXCLAMACION = 29;
  /** RegularExpression Id. */
  int AMP = 30;
  /** RegularExpression Id. */
  int DINERO = 31;
  /** RegularExpression Id. */
  int NUMERAL = 32;
  /** RegularExpression Id. */
  int IGUALIGUAL = 33;
  /** RegularExpression Id. */
  int MENORIGUAL = 34;
  /** RegularExpression Id. */
  int MENOR = 35;
  /** RegularExpression Id. */
  int MAYORIGUAL = 36;
  /** RegularExpression Id. */
  int MAYOR = 37;
  /** RegularExpression Id. */
  int DIFERENTE = 38;
  /** RegularExpression Id. */
  int OR = 39;
  /** RegularExpression Id. */
  int AND = 40;
  /** RegularExpression Id. */
  int INT = 41;
  /** RegularExpression Id. */
  int INCLUDE = 42;
  /** RegularExpression Id. */
  int FLOAT = 43;
  /** RegularExpression Id. */
  int CHAR = 44;
  /** RegularExpression Id. */
  int STRING = 45;
  /** RegularExpression Id. */
  int BOOL = 46;
  /** RegularExpression Id. */
  int NUMERO = 47;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 48;
  /** RegularExpression Id. */
  int DECIMAL = 49;
  /** RegularExpression Id. */
  int CADENA = 50;
  /** RegularExpression Id. */
  int CARACTER = 51;
  /** RegularExpression Id. */
  int DOSPUNTOS = 52;
  /** RegularExpression Id. */
  int BOOLEANO = 53;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"public\"",
    "\"private\"",
    "\"static\"",
    "\"void\"",
    "\"public static void Main()\"",
    "\"Programa\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"do\"",
    "\"while\"",
    "\"output\"",
    "\"input\"",
    "\"return\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\"\\\"\"",
    "\"!\"",
    "\"&\"",
    "\"$\"",
    "\"#\"",
    "\"==\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"int\"",
    "\"include\"",
    "\"float\"",
    "\"char\"",
    "\"string\"",
    "\"bool\"",
    "<NUMERO>",
    "<IDENTIFICADOR>",
    "<DECIMAL>",
    "<CADENA>",
    "<CARACTER>",
    "\":\"",
    "<BOOLEANO>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "<token of kind 59>",
    "<token of kind 60>",
  };

}
